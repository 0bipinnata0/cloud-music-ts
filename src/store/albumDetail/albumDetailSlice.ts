import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import type { RootState, AppThunk } from "..";
import { getAlbumDetailRequest } from "../../api/request";
import { IPlaylist } from "../../api/request/getAlbumDetailRequest";

type IAlbumState = {
  currentAlbum?: IPlaylist;
  status: "idle" | "loading" | "failed";
};

const initialState: IAlbumState = {
  status: "idle",
};

const changeCurrentAlbumAsync = createAsyncThunk<IPlaylist, string>(
  "album/changeCurrentAlbum",
  async (id) => {
    const response = await getAlbumDetailRequest(id);
    return response.data.playlist;
  }
);

const albumDetailSlice = createSlice({
  name: "album",
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    // changePageCount: (state, action: PayloadAction<number>) => {
    //   state.value.pageCount = action.payload;
    // },
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      // changeAlbumDetailAsync
      .addCase(changeCurrentAlbumAsync.pending, (state) => {
        state.status = "loading";
      })
      .addCase(changeCurrentAlbumAsync.fulfilled, (state, action) => {
        state.status = "idle";
        state.currentAlbum = action.payload;
      })
      .addCase(changeCurrentAlbumAsync.rejected, (state) => {
        console.log("获取 album 数据失败！");
        state.status = "failed";
      });
  },
});

export const {} = albumDetailSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`

export const selectAlbum = (state: RootState) => state.album;

//第一次加载对应类别的歌手
export const changeCurrentAlbum = (id: string): AppThunk => {
  return (dispatch) => dispatch(changeCurrentAlbumAsync(id));
};

export default albumDetailSlice.reducer;
